# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'XmasShow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BCM)
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
import serial

ser = serial.Serial(port='/dev/ttyUSB0',baudrate =9600,timeout=1)
flag=1
now=0
now2=0
data = ''
selection1=0.0
selection2=0.0
selected_times=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
selected_text={}
with open('selectionList.txt') as reader:
            Selections = reader.readlines()
            i=0  
            for Selection in Selections:
                a=Selection.split(',')
                a[0]=a[0].strip()
                selected_text[i]=a[0]
                i=i+1
#GPIO.setup(23, GPIO.OUT)
n=16 ## set number of selections

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 771, 541))
        self.tableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tableWidget.setStyleSheet("\n"
"background: Transparent;""\n"
"background-image: url(:/newPrefix/187161.jpg);")
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.SelectedClicked)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        self.tableWidget.setColumnWidth(0,650)
        self.tableWidget.setColumnWidth(1,100)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        with open('selectionList.txt') as reader:
            Selections = reader.readlines()
        i=0
        self.tableWidget.setRowCount(len(Selections))  
        for Selection in Selections:
            a=Selection.split(',')
            a[1]=a[1].strip()
            print(a[0])
            # item=QtWidgets.QTableWidgetItem(a[0])
            # font = QtGui.QFont()
            # font.setPointSize(36)
            # item.setFont(font)
            self.tableWidget.setItem(i,0,QtWidgets.QTableWidgetItem(a[0]))
            self.tableWidget.setItem(i,1,QtWidgets.QTableWidgetItem(str(selected_times[i])))
            i=i+1
        i=0
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.tableWidget.itemActivated.connect(self.on_Entered)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Songs"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Plays"))
   

    def on_Entered(self):
        print(self.tableWidget.currentItem().text())
        print(self.tableWidget.currentRow())
        global flag
        global now
        global now2
        global selection1
        global selection2
        if selection2-selection1>0.5:
            print(self.tableWidget.currentRow())
            v=self.tableWidget.currentRow()
            selected_times[v]=selected_times[v]+1
            self.tableWidget.setItem(v,1,QtWidgets.QTableWidgetItem(str(selected_times[v])))
            s="r"+str(v+1)+" p\n\r"
            print(s)
            now2=time.time()
        
            #if flag==1:

            ser.write(s.encode())
            # flag=0
            # now=time.time()

            time.sleep(0.2)
            data=ser.readall()
            if not data=='':
                print(data.decode('utf-8'))
                flag=0
            selection1=time.time()

            #if flag==0 and now2-now>2:
            #flag=1
            #if([item.text() for item in self.listWidget.selectedItems()]==['Selection 3']):
            #print('matched')
import newqrc_rc
def update2():
    global selection2
    selection2=time.time()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    timer = QTimer()
    timer.timeout.connect(update2)
    timer.setInterval(10)
    timer.start()
    sys.exit(app.exec_())
